{
  "hints": {
    "owner()address": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "transferOwnership(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "pauser()address": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "pause()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "unpause()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "updatePauser(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deploy()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "update()void": {
      "call_config": {
        "update_application": "CALL"
      }
    },
    "destroy()void": {
      "call_config": {
        "delete_application": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "_owner": {
          "type": "bytes",
          "key": "_owner"
        },
        "_pauser": {
          "type": "bytes",
          "key": "_pauser"
        },
        "paused": {
          "type": "bytes",
          "key": "paused"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 3,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "Placeholder",
    "desc": "",
    "methods": [
      {
        "name": "owner",
        "readonly": true,
        "args": [],
        "returns": {
          "type": "address"
        }
      },
      {
        "name": "transferOwnership",
        "desc": "Transfers the ownership of the contract to a new owner.Requires the caller to be the current owner.",
        "args": [
          {
            "name": "newOwner",
            "type": "address",
            "desc": "The address of the new owner."
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "pauser",
        "desc": "@noticeReturns current pauser@returnPauser's address",
        "args": [],
        "returns": {
          "type": "address"
        }
      },
      {
        "name": "pause",
        "desc": "@devcalled by the owner to pause, triggers stopped state",
        "args": [],
        "returns": {
          "type": "void"
        },
        "events": [
          {
            "name": "Pause",
            "args": [],
            "desc": ""
          }
        ]
      },
      {
        "name": "unpause",
        "desc": "@devcalled by the owner to unpause, returns to normal state",
        "args": [],
        "returns": {
          "type": "void"
        },
        "events": [
          {
            "name": "Unpause",
            "args": [],
            "desc": ""
          }
        ]
      },
      {
        "name": "updatePauser",
        "desc": "@devupdate the pauser role",
        "args": [
          {
            "name": "_newPauser",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        },
        "events": [
          {
            "name": "PauserChanged",
            "args": [
              {
                "name": "newAddress",
                "type": "address"
              }
            ],
            "desc": ""
          }
        ]
      },
      {
        "name": "deploy",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "update",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "destroy",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ],
    "events": [
      {
        "name": "OwnershipTransferred",
        "args": [
          {
            "name": "previousOwner",
            "type": "address",
            "desc": "Previous owner address"
          },
          {
            "name": "newOwner",
            "type": "address",
            "desc": "New owner address"
          }
        ],
        "desc": "Event emitted when ownership of the contract is transferred."
      },
      {
        "name": "Pause",
        "args": [],
        "desc": ""
      },
      {
        "name": "Unpause",
        "args": [],
        "desc": ""
      },
      {
        "name": "PauserChanged",
        "args": [
          {
            "name": "newAddress",
            "type": "address"
          }
        ],
        "desc": ""
      }
    ]
  }
}