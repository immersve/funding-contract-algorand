{
  "name": "Master",
  "desc": "",
  "methods": [
    {
      "name": "owner",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "address"
      }
    },
    {
      "name": "transferOwnership",
      "desc": "Transfers the ownership of the contract to a new owner.Requires the caller to be the current owner.",
      "args": [
        {
          "name": "newOwner",
          "type": "address",
          "desc": "The address of the new owner."
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "deploy",
      "desc": "Deploy a partner channel, setting the owner as provided",
      "args": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "returns": {
        "type": "address"
      }
    },
    {
      "name": "update",
      "desc": "Allows the owner to update the smart contract",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "destroy",
      "desc": "Destroy the smart contract, sending all Algo to the owner account. This can only be done if there are no active card funds",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "setWithdrawalTimeout",
      "desc": "Set the number of seconds a withdrawal request must wait until being withdrawn",
      "args": [
        {
          "name": "seconds",
          "type": "uint64",
          "desc": "New number of seconds to wait"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "setEarlyWithdrawalPubkey",
      "desc": "Sets the early withdrawal public key.",
      "args": [
        {
          "name": "pubkey",
          "type": "byte[32]",
          "desc": "The public key to set."
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "partnerChannelCreate",
      "desc": "Creates a partner channel account and associates it with the provided partner channel name.Only the owner of the contract can call this function.",
      "args": [
        {
          "name": "mbr",
          "type": "pay",
          "desc": "The PayTxn object representing the payment transaction."
        },
        {
          "name": "partnerChannelName",
          "type": "string",
          "desc": "The name of the partner channel."
        }
      ],
      "returns": {
        "type": "address",
        "desc": "The address of the newly created partner channel account."
      },
      "events": [
        {
          "name": "PartnerChannelCreated",
          "args": [
            {
              "name": "partnerChannel",
              "type": "address",
              "desc": "Partner Channel"
            },
            {
              "name": "partnerChannelName",
              "type": "string",
              "desc": "Partner Channel Name"
            }
          ],
          "desc": "Partner Channel Created event"
        }
      ]
    },
    {
      "name": "partnerChannelClose",
      "args": [
        {
          "name": "partnerChannel",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "cardFundCreate",
      "desc": "Create account. This generates a brand new account and funds the minimum balance requirement",
      "args": [
        {
          "name": "mbr",
          "type": "pay",
          "desc": "Payment transaction of minimum balance requirement"
        },
        {
          "name": "partnerChannel",
          "type": "address",
          "desc": "Funding Channel name"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset to opt-in to. 0 = No asset opt-in"
        }
      ],
      "returns": {
        "type": "address",
        "desc": "Newly generated account used by their card"
      },
      "events": [
        {
          "name": "CardFundCreated",
          "args": [
            {
              "name": "cardFundOwner",
              "type": "address",
              "desc": "Card Fund Owner"
            },
            {
              "name": "cardFund",
              "type": "address",
              "desc": "Card Fund"
            },
            {
              "name": "partnerChannel",
              "type": "address",
              "desc": "Partner Channel"
            }
          ],
          "desc": "Card Created event"
        }
      ]
    },
    {
      "name": "cardFundClose",
      "desc": "Close account. This permanently removes the rekey and deletes the account from the ledger",
      "args": [
        {
          "name": "cardFund",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "cardFundRecover",
      "desc": "Recovers funds from an old card and transfers them to a new card.Only the owner of the contract can perform this operation.",
      "args": [
        {
          "name": "cardFund",
          "type": "address",
          "desc": "The card fund to recover."
        },
        {
          "name": "newCardFundHolder",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "assetAllowlistAdd",
      "desc": "Allows the master contract to flag intent of accepting an asset.This can be considered the whitelists whitelist.",
      "args": [
        {
          "name": "mbr",
          "type": "pay",
          "desc": "Payment transaction of minimum balance requirement"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "The AssetID of the asset being transferred."
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "assetAllowlistRemove",
      "desc": "Allows the master contract to reject accepting an asset.",
      "args": [
        {
          "name": "asset",
          "type": "uint64",
          "desc": "The AssetID of the asset being transferred."
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "cardFundDebit",
      "desc": "Debits the specified amount of the given asset from the card account.Only the owner of the contract can perform this operation.",
      "args": [
        {
          "name": "cardFund",
          "type": "address",
          "desc": "The card fund from which the asset will be debited."
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "The asset to be debited."
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "The amount of the asset to be debited."
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "Debit",
          "args": [
            {
              "name": "card",
              "type": "address",
              "desc": "Funding Source being debited from"
            },
            {
              "name": "asset",
              "type": "uint64",
              "desc": "Asset being debited"
            },
            {
              "name": "amount",
              "type": "uint64",
              "desc": "Amount being debited"
            }
          ],
          "desc": "Debit event"
        }
      ]
    },
    {
      "name": "cardFundRefund",
      "desc": "Refunds a specified amount of an asset to a card account.Only the owner of the contract can perform this operation.",
      "args": [
        {
          "name": "cardFund",
          "type": "address"
        },
        {
          "name": "asset",
          "type": "uint64"
        },
        {
          "name": "amount",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "Refund",
          "args": [
            {
              "name": "card",
              "type": "address",
              "desc": "Funding Source being refunded to"
            },
            {
              "name": "asset",
              "type": "uint64",
              "desc": "Asset being refunded"
            },
            {
              "name": "amount",
              "type": "uint64",
              "desc": "Amount being refunded"
            }
          ],
          "desc": "Refund event"
        }
      ]
    },
    {
      "name": "getNextSettlementNonce",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "uint64"
      }
    },
    {
      "name": "setSettlementAddress",
      "desc": "Sets the settlement address to a new value.",
      "args": [
        {
          "name": "newSettlementAddress",
          "type": "address",
          "desc": "The new settlement address to set."
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "SettlementAddressChanged",
          "args": [
            {
              "name": "oldSettlementAddress",
              "type": "address",
              "desc": "Old settlement address"
            },
            {
              "name": "newSettlementAddress",
              "type": "address",
              "desc": "New settlement address"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "settle",
      "desc": "Settles a payment by transferring an asset to the specified recipient.Only the owner of the contract can call this function.",
      "args": [
        {
          "name": "asset",
          "type": "uint64",
          "desc": "The asset to be transferred."
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "The amount of the asset to be transferred."
        },
        {
          "name": "nonce",
          "type": "uint64",
          "desc": "The nonce to prevent duplicate settlements."
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "Settlement",
          "args": [
            {
              "name": "recipient",
              "type": "address",
              "desc": "Settlement destination address"
            },
            {
              "name": "asset",
              "type": "uint64",
              "desc": "Asset being settled"
            },
            {
              "name": "amount",
              "type": "uint64",
              "desc": "Amount being settled"
            },
            {
              "name": "nonce",
              "type": "uint64",
              "desc": "Settlement nonce to prevent duplicate settlements"
            }
          ],
          "desc": "Settlement event"
        }
      ]
    },
    {
      "name": "cardFundEnableAsset",
      "desc": "Allows the depositor (or owner) to OptIn to an asset, increasing the minimum balance requirement of the account",
      "args": [
        {
          "name": "mbr",
          "type": "pay"
        },
        {
          "name": "cardFund",
          "type": "address",
          "desc": "Address to add asset to"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset to add"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "cardFundDisableAsset",
      "desc": "Allows the depositor (or owner) to CloseOut of an asset, reducing the minimum balance requirement of the account",
      "args": [
        {
          "name": "cardFund",
          "type": "address",
          "desc": "The address of the card."
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "The ID of the asset to be removed."
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "cardFundWithdrawalRequest",
      "desc": "Allows the Card Holder (or contract owner) to send an amount of assets from the account",
      "args": [
        {
          "name": "cardFund",
          "type": "address",
          "desc": "Address to withdraw from"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset to withdraw"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount to withdraw"
        }
      ],
      "returns": {
        "type": "byte[32]",
        "desc": "Withdrawal hash used for completing or cancelling the withdrawal"
      },
      "events": [
        {
          "name": "WithdrawalRequest",
          "args": [
            {
              "name": "cardFund",
              "type": "address",
              "desc": "Funding Source to withdraw from"
            },
            {
              "name": "recipient",
              "type": "address",
              "desc": "Recipient address to withdraw to"
            },
            {
              "name": "asset",
              "type": "uint64",
              "desc": "Asset to withdraw"
            },
            {
              "name": "amount",
              "type": "uint64",
              "desc": "Amount to withdraw"
            },
            {
              "name": "timestamp",
              "type": "uint64",
              "desc": "Timestamp that must be reached before withdrawal can be completed"
            },
            {
              "name": "nonce",
              "type": "uint64",
              "desc": "Withdrawal nonce"
            }
          ],
          "desc": "Withdrawal Request event"
        }
      ]
    },
    {
      "name": "cardFundWithdrawalCancel",
      "desc": "Allows the Card Holder (or contract owner) to cancel a withdrawal request",
      "args": [
        {
          "name": "cardFund",
          "type": "address"
        },
        {
          "name": "withdrawal_hash",
          "type": "byte[32]"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "cardFundWithdraw",
      "desc": "Allows the Card Holder to send an amount of assets from the account",
      "args": [
        {
          "name": "cardFund",
          "type": "address"
        },
        {
          "name": "withdrawal_hash",
          "type": "byte[32]"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "cardFundWithdrawEarly",
      "desc": "Withdraws funds before the withdrawal timestamp has lapsed, by using the early withdrawal signature provided by Immersve.",
      "args": [
        {
          "name": "cardFund",
          "type": "address"
        },
        {
          "name": "withdrawal_hash",
          "type": "byte[32]"
        },
        {
          "name": "early_withdrawal_sig",
          "type": "byte[32]"
        }
      ],
      "returns": {
        "type": "void"
      }
    }
  ],
  "events": [
    {
      "name": "OwnershipTransferred",
      "args": [
        {
          "name": "previousOwner",
          "type": "address",
          "desc": "Previous owner address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "desc": "New owner address"
        }
      ],
      "desc": "Event emitted when ownership of the contract is transferred."
    },
    {
      "name": "PartnerChannelCreated",
      "args": [
        {
          "name": "partnerChannel",
          "type": "address",
          "desc": "Partner Channel"
        },
        {
          "name": "partnerChannelName",
          "type": "string",
          "desc": "Partner Channel Name"
        }
      ],
      "desc": "Partner Channel Created event"
    },
    {
      "name": "CardFundCreated",
      "args": [
        {
          "name": "cardFundOwner",
          "type": "address",
          "desc": "Card Fund Owner"
        },
        {
          "name": "cardFund",
          "type": "address",
          "desc": "Card Fund"
        },
        {
          "name": "partnerChannel",
          "type": "address",
          "desc": "Partner Channel"
        }
      ],
      "desc": "Card Created event"
    },
    {
      "name": "CardFundAssetEnabled",
      "args": [
        {
          "name": "cardFund",
          "type": "address",
          "desc": "Card Fund"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset"
        }
      ],
      "desc": "Card Fund Asset Enabled event"
    },
    {
      "name": "CardFundAssetDisabled",
      "args": [
        {
          "name": "cardFund",
          "type": "address",
          "desc": "Card Fund"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset"
        }
      ],
      "desc": "Card Fund Asset Disabled event"
    },
    {
      "name": "Debit",
      "args": [
        {
          "name": "card",
          "type": "address",
          "desc": "Funding Source being debited from"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset being debited"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount being debited"
        }
      ],
      "desc": "Debit event"
    },
    {
      "name": "Refund",
      "args": [
        {
          "name": "card",
          "type": "address",
          "desc": "Funding Source being refunded to"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset being refunded"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount being refunded"
        }
      ],
      "desc": "Refund event"
    },
    {
      "name": "SettlementAddressChanged",
      "args": [
        {
          "name": "oldSettlementAddress",
          "type": "address",
          "desc": "Old settlement address"
        },
        {
          "name": "newSettlementAddress",
          "type": "address",
          "desc": "New settlement address"
        }
      ],
      "desc": ""
    },
    {
      "name": "Settlement",
      "args": [
        {
          "name": "recipient",
          "type": "address",
          "desc": "Settlement destination address"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset being settled"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount being settled"
        },
        {
          "name": "nonce",
          "type": "uint64",
          "desc": "Settlement nonce to prevent duplicate settlements"
        }
      ],
      "desc": "Settlement event"
    },
    {
      "name": "WithdrawalRequest",
      "args": [
        {
          "name": "cardFund",
          "type": "address",
          "desc": "Funding Source to withdraw from"
        },
        {
          "name": "recipient",
          "type": "address",
          "desc": "Recipient address to withdraw to"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset to withdraw"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount to withdraw"
        },
        {
          "name": "timestamp",
          "type": "uint64",
          "desc": "Timestamp that must be reached before withdrawal can be completed"
        },
        {
          "name": "nonce",
          "type": "uint64",
          "desc": "Withdrawal nonce"
        }
      ],
      "desc": "Withdrawal Request event"
    },
    {
      "name": "Withdrawal",
      "args": [
        {
          "name": "cardFund",
          "type": "address",
          "desc": "Funding Source withdrawn from"
        },
        {
          "name": "recipient",
          "type": "address",
          "desc": "Recipient address withdrawn to"
        },
        {
          "name": "asset",
          "type": "uint64",
          "desc": "Asset withdrawn"
        },
        {
          "name": "amount",
          "type": "uint64",
          "desc": "Amount withdrawn"
        },
        {
          "name": "nonce",
          "type": "uint64",
          "desc": "Withdrawal nonce"
        }
      ],
      "desc": "Withdrawal event"
    }
  ]
}